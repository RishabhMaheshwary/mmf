(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{107:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=s(a),m=n,u=d["".concat(i,".").concat(m)]||d[m]||b[m]||o;return a?r.a.createElement(u,c(c({ref:t},l),{},{components:a})):r.a.createElement(u,c({ref:t},l))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var l=2;l<o;l++)i[l]=a[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},74:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return s}));var n=a(3),r=a(8),o=(a(0),a(107)),i={id:"m4c_captioner",sidebar_label:"M4C-Captioner",title:"TextCaps: a Dataset for Image Captioning with Reading Comprehension"},c={unversionedId:"projects/m4c_captioner",id:"projects/m4c_captioner",isDocsHomePage:!1,title:"TextCaps: a Dataset for Image Captioning with Reading Comprehension",description:"This project page shows how to use M4C-Captioner model from the following paper, released under the MMF:",source:"@site/docs/projects/m4c_captioner.md",slug:"/projects/m4c_captioner",permalink:"/docs/projects/m4c_captioner",editUrl:"https://github.com/facebookresearch/mmf/edit/master/website/docs/projects/m4c_captioner.md",version:"current",lastUpdatedBy:"KMarino",lastUpdatedAt:1623896403,sidebar_label:"M4C-Captioner",sidebar:"docs",previous:{title:"Iterative Answer Prediction with Pointer-Augmented Multimodal Transformers for TextVQA",permalink:"/docs/projects/m4c"},next:{title:"MoViE+MCAN (VQA 2020 Challenge Winner)",permalink:"/docs/projects/movie_mcan"}},p=[{value:"Installation",id:"installation",children:[]},{value:"Pretrained M4C-Captioner Models",id:"pretrained-m4c-captioner-models",children:[]},{value:"Training and Evaluating M4C-Captioner",id:"training-and-evaluating-m4c-captioner",children:[]}],l={toc:p};function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This project page shows how to use M4C-Captioner model from the following paper, released under the MMF:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"O. Sidorov, R. Hu, M. Rohrbach, A. Singh, ",Object(o.b)("em",{parentName:"li"},"TextCaps: a Dataset for Image Captioning with Reading Comprehension"),". in ECCV, 2020 (",Object(o.b)("a",{parentName:"li",href:"https://arxiv.org/pdf/2003.12462.pdf"},"PDF"),")")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"@inproceedings{sidorov2019textcaps,\n  title={TextCaps: a Dataset for Image Captioningwith Reading Comprehension},\n  author={Sidorov, Oleksii and Hu, Ronghang and Rohrbach, Marcus and Singh, Amanpreet},\n  booktitle={European Conference on Computer Vision},\n  year={2020}\n}\n")),Object(o.b)("p",null,"Project Page: ",Object(o.b)("a",{parentName:"p",href:"https://textvqa.org/textcaps"},"https://textvqa.org/textcaps")),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("p",null,"Install MMF following the ",Object(o.b)("a",{parentName:"p",href:"https://mmf.sh/docs/getting_started/installation/"},"installation guide"),"."),Object(o.b)("p",null,"This will install all M4C dependencies such as ",Object(o.b)("inlineCode",{parentName:"p"},"transformers")," and ",Object(o.b)("inlineCode",{parentName:"p"},"editdistance")," and will also compile the python interface for PHOC features."),Object(o.b)("p",null,"In addition, it is also necessary to install ",Object(o.b)("inlineCode",{parentName:"p"},"pycocoevalcap"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"# install pycocoevalcap\n# use the repo below instead of https://github.com/tylin/coco-caption\n# note: you also need to have java on your machine\npip install git+https://github.com/ronghanghu/coco-caption.git@python23\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note that java is required for ",Object(o.b)("a",{parentName:"strong",href:"https://github.com/ronghanghu/coco-caption"},Object(o.b)("inlineCode",{parentName:"a"},"pycocoevalcap"))),"."),Object(o.b)("h2",{id:"pretrained-m4c-captioner-models"},"Pretrained M4C-Captioner Models"),Object(o.b)("p",null,"We release two variants of the M4C-Captioner model trained on the TextCaps dataset, one trained with newer features extracted with maskrcnn-benchmark (",Object(o.b)("inlineCode",{parentName:"p"},"defaults"),"), and the other trained with older features extracted with Caffe2 (",Object(o.b)("inlineCode",{parentName:"p"},"with_caffe2_feat"),"), which is used in our experimentations in the paper and has higher CIDEr. ",Object(o.b)("strong",{parentName:"p"},"Please use ",Object(o.b)("inlineCode",{parentName:"strong"},"with_caffe2_feat")," config and model zoo file if you would like to exactly reproduce the results from our paper.")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Config Files (under ",Object(o.b)("inlineCode",{parentName:"th"},"projects/m4c_captioner/configs/m4c_captioner/textcaps"),")"),Object(o.b)("th",{parentName:"tr",align:null},"Pretrained Model Key"),Object(o.b)("th",{parentName:"tr",align:null},"Metrics"),Object(o.b)("th",{parentName:"tr",align:null},"Notes"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"defaults.yaml")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"m4c_captioner.textcaps.defaults")),Object(o.b)("td",{parentName:"tr",align:null},"val CIDEr -- 89.1 (BLEU-4 -- 23.4)"),Object(o.b)("td",{parentName:"tr",align:null},"newer features extracted with maskrcnn-benchmark")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"with_caffe2_feat.yaml")),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("inlineCode",{parentName:"td"},"m4c_captioner.textcaps.with_caffe2_feat")),Object(o.b)("td",{parentName:"tr",align:null},"val CIDEr -- 89.6 (BLEU-4 -- 23.3)"),Object(o.b)("td",{parentName:"tr",align:null},"older features extracted with Caffe2; ",Object(o.b)("strong",{parentName:"td"},"used in experiments in the paper"))))),Object(o.b)("h2",{id:"training-and-evaluating-m4c-captioner"},"Training and Evaluating M4C-Captioner"),Object(o.b)("p",null,"Please follow the ",Object(o.b)("a",{parentName:"p",href:"https://learnpythia.readthedocs.io/en/latest/tutorials/quickstart.html#training"},"MMF documentation")," for the training and evaluation of the M4C-Captioner models."),Object(o.b)("p",null,"For example:"),Object(o.b)("p",null,"1) to train the M4C-Captioner model on the TextCaps training set:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"mmf_run datasets=textcaps \\\n    model=m4c_captioner \\\n    config=projects/m4c_captioner/configs/m4c_captioner/textcaps/defaults.yaml \\\n    env.save_dir=./save/m4c_captioner/defaults \\\n    run_type=train_val\n")),Object(o.b)("p",null,"(Replace ",Object(o.b)("inlineCode",{parentName:"p"},"projects/m4c_captioner/configs/m4c_captioner/textcaps/defaults.yaml")," with other config files to train with other configurations. See the table above. You can also specify a different path to ",Object(o.b)("inlineCode",{parentName:"p"},"env.save_dir")," to save to a location you prefer.)"),Object(o.b)("p",null,"2) to generate prediction json files for the TextCaps (assuming you are evaluating the pretrained model ",Object(o.b)("inlineCode",{parentName:"p"},"m4c_captioner.textcaps.defaults"),"):"),Object(o.b)("p",null,"Generate prediction file on the validation set:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"mmf_predict datasets=textcaps \\\n    model=m4c_captioner \\\n    config=projects/m4c_captioner/configs/m4c_captioner/textcaps/defaults.yaml \\\n    env.save_dir=./save/m4c_captioner/defaults \\\n    run_type=val \\\n    checkpoint.resume_zoo=m4c_captioner.textcaps.defaults\n")),Object(o.b)("p",null,"Generate prediction file on the test set:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"mmf_predict datasets=textcaps \\\n    model=m4c_captioner \\\n    config=projects/m4c_captioner/configs/m4c_captioner/textcaps/defaults.yaml \\\n    env.save_dir=./save/m4c_captioner/defaults \\\n    run_type=test \\\n    checkpoint.resume_zoo=m4c_captioner.textcaps.defaults\n")),Object(o.b)("p",null,"As with training, you can replace ",Object(o.b)("inlineCode",{parentName:"p"},"config")," and ",Object(o.b)("inlineCode",{parentName:"p"},"checkpoint.resume_zoo")," according to the setting you want to evaluate."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Use ",Object(o.b)("inlineCode",{parentName:"p"},"checkpoint.resume=True")," AND ",Object(o.b)("inlineCode",{parentName:"p"},"checkpoint.resume_best=True")," instead of ",Object(o.b)("inlineCode",{parentName:"p"},"checkpoint.resume_zoo=m4c_captioner.textcaps.defaults")," to evaluate your trained snapshots."))),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Follow ",Object(o.b)("a",{parentName:"p",href:"https://mmf.sh/docs/tutorials/checkpointing"},"checkpointing")," tutorial to understand more fine-grained details of checkpoint, loading and resuming in MMF"))),Object(o.b)("p",null,"Afterwards, use ",Object(o.b)("inlineCode",{parentName:"p"},"projects/m4c_captioner/scripts/textcaps_eval.py")," to evaluate the prediction json file. For example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"# the default data location of MMF (unless you have specified it otherwise)\n# this is where MMF datasets are stored\nexport MMF_DATA_DIR=~/.cache/torch/mmf/data\n\npython projects/m4c_captioner/scripts/textcaps_eval.py \\\n    --set val \\\n    --annotation_file ${MMF_DATA_DIR}/datasets/textcaps/defaults/annotations/imdb_val.npy \\\n    --pred_file YOUR_VAL_PREDICTION_FILE\n")),Object(o.b)("p",null,"For test set evaluation, please submit to the TextCaps EvalAI server. See ",Object(o.b)("a",{parentName:"p",href:"https://textvqa.org/textcaps"},"https://textvqa.org/textcaps")," for details."))}s.isMDXComponent=!0}}]);