(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{107:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),l=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),b=a,u=d["".concat(o,".").concat(b)]||d[b]||m[b]||i;return n?r.a.createElement(u,s(s({ref:t},p),{},{components:n})):r.a.createElement(u,s({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return l}));var a=n(3),r=n(8),i=(n(0),n(107)),o={id:"training_tricks",title:"Training Tricks",sidebar_label:"Training Tricks"},s={unversionedId:"notes/training_tricks",id:"notes/training_tricks",isDocsHomePage:!1,title:"Training Tricks",description:"FP16",source:"@site/docs/notes/training_tricks.md",slug:"/notes/training_tricks",permalink:"/docs/notes/training_tricks",editUrl:"https://github.com/facebookresearch/mmf/edit/master/website/docs/notes/training_tricks.md",version:"current",lastUpdatedBy:"KMarino",lastUpdatedAt:1623896403,sidebar_label:"Training Tricks",sidebar:"docs",previous:{title:"MMF's Configuration System",permalink:"/docs/notes/configuration"},next:{title:"Dataset Zoo",permalink:"/docs/notes/dataset_zoo"}},c=[{value:"FP16",id:"fp16",children:[]},{value:"Optimizer State Sharding",id:"optimizer-state-sharding",children:[]},{value:"Splitting Dataset",id:"splitting-dataset",children:[]}],p={toc:c};function l(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"fp16"},"FP16"),Object(i.b)("p",null,"MMF supports FP16 training for faster performance with negligible impact on\nthe results through ",Object(i.b)("inlineCode",{parentName:"p"},"torch.cuda.amp")," module. Append ",Object(i.b)("inlineCode",{parentName:"p"},"training.fp16=True")," to\nthe end of your command to enable fp16 training in the trainer."),Object(i.b)("h2",{id:"optimizer-state-sharding"},"Optimizer State Sharding"),Object(i.b)("p",null,"MMF supports optimizer state sharding for fitting larger models in GPUs. To enable optimizer state sharding append ",Object(i.b)("inlineCode",{parentName:"p"},"optimizer.enable_state_sharding=True")," to the end of your command. Optimizer state sharding is achieved by using the ",Object(i.b)("inlineCode",{parentName:"p"},"OSS")," optimizer wrapper from ",Object(i.b)("a",{parentName:"p",href:"https://github.com/facebookresearch/fairscale"},"fairscale")," library. ",Object(i.b)("inlineCode",{parentName:"p"},"OSS")," uses the Zero Redundancy Optimizer ",Object(i.b)("a",{parentName:"p",href:"https://arxiv.org/abs/1910.02054"},"(ZeRO)"),"."),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},Object(i.b)("a",{parentName:"p",href:"https://github.com/facebookresearch/fairscale"},"fairscale")," is not installed along with MMF due to some dependency issues. In order to use optimizer state sharding, install the library following the instructions in the repository."))),Object(i.b)("h2",{id:"splitting-dataset"},"Splitting Dataset"),Object(i.b)("p",null,"MMF supports spliting dataset dynamically. For example, users of MMF might want to split some percentage of the train dataset to be used for validation or test. ",Object(i.b)("a",{parentName:"p",href:"https://github.com/facebookresearch/mmf/pull/470"},"#470")," introduced such a feature. You can specifiy how much of the train dataset will be used for eval or test with the following config (textvqa dataset as an example):"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"}," textvqa:\n    zoo_requirements:\n    - textvqa.defaults\n    - textvqa.ocr_en\n    split_train:\n      val: 0.99 # 0.99 of the train dataset will be used for validation\n      test: 0.001 # 0.001 of the train dataset will be used for test\n      seed: 123456 # this is the default seed used for the random split. This line is optional.\n    features:\n      train:\n      - textvqa/defaults/features/open_images/detectron.lmdb,textvqa/ocr_en/features/ocr_en_frcn_features.lmdb\n      test:\n      - test_path\n   processors:\n      ...\n")),Object(i.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"val and test percentages must be less than 100%. There should to be some percentages left for the training dataset."))))}l.isMDXComponent=!0}}]);